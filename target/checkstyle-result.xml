<?xml version="1.0" encoding="UTF-8"?>
<checkstyle version="8.29">
<file name="/home/undergrad/1/ccua/Desktop/2430S20/project/src/main/java/adventure/Game.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="4" column="8" severity="error" message="Unused import - org.json.simple.JSONArray." source="com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"/>
<error line="7" column="8" severity="error" message="Unused import - java.io.FileReader." source="com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"/>
<error line="16" column="40" severity="error" message="Array brackets at illegal position." source="com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck"/>
</file>
<file name="/home/undergrad/1/ccua/Desktop/2430S20/project/src/main/java/adventure/Item.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="28" column="5" severity="error" message="Class &apos;Item&apos; looks like designed for extension (can be subclassed), but the method &apos;getContainingRoom&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Item&apos; final or making the method &apos;getContainingRoom&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/undergrad/1/ccua/Desktop/2430S20/project/src/main/java/adventure/Adventure.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="17" column="5" severity="error" message="Class &apos;Adventure&apos; looks like designed for extension (can be subclassed), but the method &apos;listAllRooms&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Adventure&apos; final or making the method &apos;listAllRooms&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="25" column="5" severity="error" message="Class &apos;Adventure&apos; looks like designed for extension (can be subclassed), but the method &apos;listAllItems&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Adventure&apos; final or making the method &apos;listAllItems&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="33" column="5" severity="error" message="Class &apos;Adventure&apos; looks like designed for extension (can be subclassed), but the method &apos;getCurrentRoomDescription&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Adventure&apos; final or making the method &apos;getCurrentRoomDescription&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/undergrad/1/ccua/Desktop/2430S20/project/src/main/java/adventure/Room.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="15" column="5" severity="error" message="Class &apos;Room&apos; looks like designed for extension (can be subclassed), but the method &apos;listItems&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Room&apos; final or making the method &apos;listItems&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="24" column="5" severity="error" message="Class &apos;Room&apos; looks like designed for extension (can be subclassed), but the method &apos;getName&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Room&apos; final or making the method &apos;getName&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="39" column="5" severity="error" message="Class &apos;Room&apos; looks like designed for extension (can be subclassed), but the method &apos;getConnectedRoom&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Room&apos; final or making the method &apos;getConnectedRoom&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="42" column="9" severity="error" message="&apos;}&apos; at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally)." source="com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"/>
<error line="46" column="9" severity="error" message="&apos;}&apos; at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally)." source="com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"/>
<error line="50" column="9" severity="error" message="&apos;}&apos; at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally)." source="com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"/>
</file>
</checkstyle>
